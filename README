=> Usage

NOTE: I have packaged a pre-compiled version of mclean, however it is compiled
      for an amd64 system.  If you have issues just delete it and it should be
      automatically recompiled for your system when you run make.

There are two steps to ripping something: creating the configuration file and
executing the rip job.

To create a configuration file for ripping a DVD run ./scripts/rip-dvd-mconf.sh
(note that this REQUIRES mconf from the Linux kernel, see below).  Select the
titles you want, enter the names and other options then exit and save your
kernel configuration.  This will create a configuration file, either in the DVD
directory, if it is writeable, or in the current directory.  The script
automatically runs ./scripts/mkdirs.sh on this configuration file, which creates
a rip.Output_Name.mkv.random directory for each title of the DVD you selected.

To execute the rip job directories simply run make in this directory.

-> FILES INCLUDED

mclean.c
This is the mplayer/mencoder/oggenc output postprocessor used to extract the
cropping parameters for auto cropping, and produce the nice progress bars in
place of the ugly mplayer/mencoder/oggenc output.

Makefile
This will automatically compile mclean (if required) and then run all the rip
jobs in this directory.

scripts/rip.mk
All the glue logic for the ripping itself is in here.

scripts/rip-dvd-mconf.sh
This is the main script for creating a rip job.  It relies on the linux kernel
configuration interface (menuconfig).  To use it you will require linux kernel
sources in /usr/src/linux that you have at least done 'make menuconfig' in.

scripts/mkdirs.sh
This reads the configuration file produced by rip-dvd-mconf.sh and creates the
rip job directories with the require make fragment.  This is separate as it is
independent of the method used to create the configuration file.

=> BUGS

The main bug in the current version is in the characters allowed in names.  I
have had problems with apostrophes (') in names, and am not bothered enough to
work out why (it's probably quite simple).  Patches are, of course, welcome.

The percentage complete reader in mclean seems to often read something from the
leading rubbish in the mencoder output that starts the percentage complete at
something other that zero (often 100%).  I don't care enough to fix it.
